import{_ as y}from"./CreateProduct.vue.cf86b5cf.js";import{b as x,f as I,e as d,c as s,n as S}from"./entry.1c78ecf8.js";import{x as A,a as o,M as E,N as $,u as p,k as h}from"./swiper-vue.aabf7ec7.js";import"./ButtonOpacity.c5abfed0.js";import"./nuxt-link.c8e0820d.js";import"./cn.a642df04.js";import"./InputOutline.vue.8a3d92d0.js";import"./useFormGroup.e0eb0836.js";import"./index.28714f24.js";import"./AlertTextDanger.2871058e.js";import"./SelectMenu.f0959a52.js";import"./ArrowDown.847b01c7.js";import"./nuxt-icon.057f591b.js";import"./ButtonText.vue.dd3c1950.js";import"./Icon.d5fd9935.js";import"./tw-merge.94f63f7c.js";import"./ui.config.d79a8953.js";import"./index.54e3348d.js";import"./usePopper.74942890.js";import"./micro-task.525ba7d0.js";import"./open-closed.0816ab40.js";import"./use-resolve-button-type.1aa28d91.js";import"./disposables.bfda3bab.js";import"./TextPortalPrimary.8544e9cd.js";import"./TextareaOutline.vue.2b9b415c.js";import"./Cross.7da58a7e.js";import"./Delete.e269dae0.js";import"./ButtonPrimary.vue.bb4ccf13.js";import"./ProfilePage.vue.522680b5.js";import"./useMultiLang.4bfc9b35.js";const at=A({__name:"[product_id]",setup(U){const m=x(),{t:l}=I(),n=o(""),_=o(""),t=o({titleUa:"",titleEn:"",descriptionUa:"",descriptionEn:"",categoryId:"",priceType:"",fixedPrice:{amount:"",price:"",unitId:""},variatedPrices:[],productImages:[]}),v=o({}),u=m.params.product_id,f=()=>{d(`${s()}/product/show/${u}`).then(e=>{var r;const i=e.data.value;console.log(i),t.value.categoryId=String(i.category_id),t.value.descriptionEn=i.description_en,t.value.descriptionUa=i.description_ua,t.value.descriptionEn=i.description_en,t.value.titleEn=i.title_en,t.value.titleUa=i.title_ua,t.value.productImages=((r=i.images)==null?void 0:r.map(a=>a.path))||[],t.value.priceType=i.price_type,i.price_type==="fixed"&&t.value.fixedPrice&&(t.value.fixedPrice.amount=String(i.prices[0].min_amount)||"",t.value.fixedPrice.price=String(i.prices[0].price)||"",t.value.fixedPrice.unitId=String(i.prices[0].unit_id)||""),i.price_type==="variated"&&(t.value.variatedPrices=i.prices.map(a=>({id:a.id,minAmount:String(a.min_amount),maxAmount:String(a.max_amount),price:String(a.price),unitId:String(a.unit_id)})))})},g=()=>{const e=new FormData;e.append("title_ua",t.value.titleUa),e.append("title_en",t.value.titleEn),e.append("description_ua",t.value.descriptionUa),e.append("description_en",t.value.descriptionEn),e.append("category_id",`${t.value.categoryId}`),e.append("price_type",t.value.priceType),t.value.priceType==="fixed"&&t.value.fixedPrice&&(e.append("amount",t.value.fixedPrice.amount),e.append("price",t.value.fixedPrice.price),e.append("unit_id",t.value.fixedPrice.unitId)),t.value.priceType==="variated"&&t.value.variatedPrices.length>0&&e.append("price_variations",JSON.stringify(t.value.variatedPrices.map(r=>({minAmount:r.minAmount,maxAmount:r.maxAmount,price:r.price,unitId:r.unitId}))));const{productImages:i}=t.value;return i.forEach((r,a)=>{const c=`product_images[${a+1}]`;e.append(c,r)}),e},P=()=>{d(`${s()}/product/update/${u}`,{method:"POST",body:g()}).then(e=>{S("/profile/my_products"),console.log(e)}).catch(e=>{n.value=l("fill_in_all_fields"),console.log(e)})};return f(),(e,i)=>{const r=y;return E(),$(r,{inputs:p(t),"onUpdate:inputs":i[0]||(i[0]=a=>h(t)?t.value=a:null),product:p(v),error:p(n),message:p(_),title:e.$t("add_product.edit_product"),labelButtonSubmit:e.$t("add_product.edit_product"),onActionSubmit:P},null,8,["inputs","product","error","message","title","labelButtonSubmit"])}}});export{at as default};
