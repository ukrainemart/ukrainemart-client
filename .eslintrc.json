{
  // Configuration for JavaScript files
  "extends": ["airbnb-base", "plugin:prettier/recommended"],
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true
      },
      { "allow": ["foo_", "_bar"] }
    ]
  },
  "overrides": [
    // Configuration for TypeScript files
    {
      "files": ["**/*.ts", "**/*.vue"],
      "plugins": ["@typescript-eslint", "unused-imports", "tailwindcss", "simple-import-sort"],
      "extends": [
        "plugin:tailwindcss/recommended",
        "airbnb-base",
        "airbnb-typescript/base",
        "@nuxtjs/eslint-config-typescript",
        "plugin:vue/vue3-recommended",
        "plugin:prettier/recommended"
      ],
      "parserOptions": {
        "project": "./tsconfig.json",
        "parser": "@typescript-eslint/parser",
        "extraFileExtensions": [".vue"]
      },
      "rules": {
        "prettier/prettier": [
          "error",
          {
            "singleQuote": true,
            "endOfLine": "lf"
          }
        ],
        "import/extensions": "off", // Avoid missing file extension errors, TypeScript already provides a similar feature
        "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
        "no-restricted-syntax": ["error", "ForInStatement", "LabeledStatement", "WithStatement"], // Overrides Airbnb configuration and enable no-restricted-syntax
        "import/prefer-default-export": "off", // Named export is easier to refactor automatically
        "simple-import-sort/imports": "error", // Import configuration for `eslint-plugin-simple-import-sort`
        "simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
        "no-console": "off",
        "vue/multi-word-component-names": "off",
        "vue/component-tags-order": [
          "error",
          {
            "order": ["script", "template", "style"]
          }
        ],
        "vue/padding-line-between-blocks": ["error"],
        "tailwindcss/no-custom-classname": [
          "error",
          {
            "callees": ["clsx", "twMerge"],
            "whitelist": ["^.*_.*$"] // Require custom classes to include underscores in their names
          }
        ],
        "vue/attribute-hyphenation": "off",
        "vue/html-self-closing": [
          "error",
          {
            "html": {
              "void": "always",
              "normal": "always",
              "component": "always"
            },
            "svg": "always",
            "math": "always"
          }
        ],
        "vue/v-on-event-hyphenation": "off",
        "vue/no-mutating-props": "off"
      }
    }
  ]
}
